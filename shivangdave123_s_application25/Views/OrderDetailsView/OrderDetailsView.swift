import SwiftUI

struct OrderDetailsView: View {
    @StateObject var orderDetailsViewModel = OrderDetailsViewModel()
    @Environment(\.presentationMode) var presentationMode: Binding<PresentationMode>
    var body: some View {
        VStack {
            VStack(alignment: .leading, spacing: 0) {
                HStack {
                    HStack {
                        Image("img_lefticon_2")
                            .resizable()
                            .frame(width: getRelativeWidth(size: 24.0), height: getRelativeHeight(size: 24.18), alignment: .center)
                            .scaledToFit()
                            .clipped()
                        Text(StringConstants.kLblOrderDetails)
                            .font(FontScheme.kPoppinsBold(size: getRelativeHeight(size: 16.0)))
                            .foregroundColor(ColorConstants.Indigo900)
                            .minimumScaleFactor(0.5)
                            .multilineTextAlignment(.leading)
                            .frame(width: getRelativeWidth(size: 114.0), height: getRelativeHeight(size: 24.18), alignment: .topLeading)
                            .padding(.leading, getRelativeWidth(size: 12.0))
                    }
                    .frame(width: getRelativeWidth(size: 150.0), height: getRelativeHeight(size: 24.18), alignment: .leading)
                    .padding(.leading, getRelativeWidth(size: 16.0))
                    .padding(.trailing, getRelativeWidth(size: 209.0))
                }
                .frame(width: UIScreen.main.bounds.width - 20, height: getRelativeHeight(size: 24.18), alignment: .leading)
                ScrollView(.vertical, showsIndicators: false) {
                    VStack(alignment: .leading, spacing: 0) {
                        ZStack(alignment: .center) {
                            Divider()
                                .frame(width: getRelativeWidth(size: 96.0), height: getRelativeHeight(size: 1.0), alignment: .topLeading)
                                .background(ColorConstants.LightBlueA200)
                                .padding(.bottom, getRelativeHeight(size: 45.0))
                                .padding(.trailing, getRelativeWidth(size: 225.0))
                            Divider()
                                .frame(width: getRelativeWidth(size: 96.0), height: getRelativeHeight(size: 1.0), alignment: .center)
                                .background(ColorConstants.LightBlueA200)
                                .padding(.bottom, getRelativeHeight(size: 45.0))
                                .padding(.leading, getRelativeWidth(size: 122.0))
                                .padding(.trailing, getRelativeWidth(size: 129.0))
                            Divider()
                                .frame(width: getRelativeWidth(size: 96.0), height: getRelativeHeight(size: 1.0), alignment: .topTrailing)
                                .background(ColorConstants.Blue50)
                                .padding(.bottom, getRelativeHeight(size: 45.0))
                                .padding(.leading, getRelativeWidth(size: 218.0))
                            HStack {
                                VStack {
                                    Image("img_pacing")
                                        .resizable()
                                        .frame(width: getRelativeWidth(size: 24.0), height: getRelativeHeight(size: 24.0), alignment: .center)
                                        .scaledToFit()
                                        .clipped()
                                        .padding(.horizontal, getRelativeWidth(size: 14.0))
                                    Text(StringConstants.kLblPacking)
                                        .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                        .foregroundColor(ColorConstants.Bluegray300)
                                        .minimumScaleFactor(0.5)
                                        .multilineTextAlignment(.center)
                                        .frame(width: getRelativeWidth(size: 51.0), height: getRelativeHeight(size: 22.0), alignment: .center)
                                        .padding(.top, getRelativeHeight(size: 12.0))
                                }
                                .frame(width: getRelativeWidth(size: 51.0), height: getRelativeHeight(size: 58.0), alignment: .center)
                                VStack {
                                    Image("img_pacing")
                                        .resizable()
                                        .frame(width: getRelativeWidth(size: 24.0), height: getRelativeHeight(size: 24.0), alignment: .center)
                                        .scaledToFit()
                                        .clipped()
                                        .padding(.horizontal, getRelativeWidth(size: 17.0))
                                    Text(StringConstants.kLblShipping)
                                        .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                        .foregroundColor(ColorConstants.Bluegray300)
                                        .minimumScaleFactor(0.5)
                                        .multilineTextAlignment(.center)
                                        .frame(width: getRelativeWidth(size: 57.0), height: getRelativeHeight(size: 22.0), alignment: .center)
                                        .padding(.top, getRelativeHeight(size: 12.0))
                                }
                                .frame(width: getRelativeWidth(size: 57.0), height: getRelativeHeight(size: 58.0), alignment: .center)
                                .padding(.leading, getRelativeWidth(size: 42.0))
                                VStack {
                                    Image("img_pacing")
                                        .resizable()
                                        .frame(width: getRelativeWidth(size: 24.0), height: getRelativeHeight(size: 24.0), alignment: .center)
                                        .scaledToFit()
                                        .clipped()
                                        .padding(.horizontal, getRelativeWidth(size: 13.0))
                                    Text(StringConstants.kLblArriving)
                                        .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                        .foregroundColor(ColorConstants.Bluegray300)
                                        .minimumScaleFactor(0.5)
                                        .multilineTextAlignment(.center)
                                        .frame(width: getRelativeWidth(size: 49.0), height: getRelativeHeight(size: 22.0), alignment: .center)
                                        .padding(.top, getRelativeHeight(size: 12.0))
                                }
                                .frame(width: getRelativeWidth(size: 49.0), height: getRelativeHeight(size: 58.0), alignment: .center)
                                .padding(.leading, getRelativeWidth(size: 43.0))
                                VStack {
                                    Image("img_success")
                                        .resizable()
                                        .frame(width: getRelativeWidth(size: 24.0), height: getRelativeHeight(size: 24.0), alignment: .center)
                                        .scaledToFit()
                                        .clipped()
                                        .padding(.horizontal, getRelativeWidth(size: 13.0))
                                    Text(StringConstants.kLblSuccess)
                                        .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                        .foregroundColor(ColorConstants.Bluegray300)
                                        .minimumScaleFactor(0.5)
                                        .multilineTextAlignment(.center)
                                        .frame(width: getRelativeWidth(size: 53.0), height: getRelativeHeight(size: 22.0), alignment: .center)
                                        .padding(.top, getRelativeHeight(size: 12.0))
                                }
                                .frame(width: getRelativeWidth(size: 53.0), height: getRelativeHeight(size: 58.0), alignment: .center)
                                .padding(.leading, getRelativeWidth(size: 47.0))
                            }
                            .frame(width: getRelativeWidth(size: 342.0), height: getRelativeHeight(size: 58.0), alignment: .center)
                            .padding(.trailing, getRelativeWidth(size: 5.0))
                        }
                        .hideNavigationBar()
                        .frame(width: getRelativeWidth(size: 347.0), height: getRelativeHeight(size: 58.0), alignment: .center)
                        .padding(.horizontal, getRelativeWidth(size: 14.0))
                        Text(StringConstants.kLblProduct)
                            .font(FontScheme.kPoppinsBold(size: getRelativeHeight(size: 14.0)))
                            .foregroundColor(ColorConstants.Indigo900)
                            .minimumScaleFactor(0.5)
                            .multilineTextAlignment(.leading)
                            .frame(width: getRelativeWidth(size: 60.0), height: getRelativeHeight(size: 21.0), alignment: .topLeading)
                            .padding(.top, getRelativeHeight(size: 24.0))
                            .padding(.horizontal, getRelativeWidth(size: 16.0))
                        VStack(spacing: 0) {
                            ScrollView(.vertical, showsIndicators: false) {
                                LazyVStack {
                                    ForEach(0 ... 1, id: \.self) { index in
                                        Productdetails1Cell()
                                    }
                                }
                            }
                        }
                        .frame(width: getRelativeWidth(size: 343.0), alignment: .center)
                        .padding(.top, getRelativeHeight(size: 12.0))
                        .padding(.horizontal, getRelativeWidth(size: 14.0))
                        Text(StringConstants.kMsgShippingDetail)
                            .font(FontScheme.kPoppinsBold(size: getRelativeHeight(size: 14.0)))
                            .foregroundColor(ColorConstants.Indigo900)
                            .minimumScaleFactor(0.5)
                            .multilineTextAlignment(.leading)
                            .frame(width: getRelativeWidth(size: 125.0), height: getRelativeHeight(size: 21.0), alignment: .topLeading)
                            .padding(.top, getRelativeHeight(size: 24.0))
                            .padding(.horizontal, getRelativeWidth(size: 16.0))
                        VStack(alignment: .leading, spacing: 0) {
                            HStack {
                                Text(StringConstants.kLblDateShipping)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo90087)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.leading)
                                    .frame(width: getRelativeWidth(size: 91.0), height: getRelativeHeight(size: 22.0), alignment: .topLeading)
                                    .opacity(0.5)
                                Spacer()
                                Text(StringConstants.kMsgJanuary16202)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo900)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.trailing)
                                    .frame(width: getRelativeWidth(size: 106.0), height: getRelativeHeight(size: 22.0), alignment: .topTrailing)
                                    .padding(.leading, getRelativeWidth(size: 114.0))
                            }
                            .frame(width: getRelativeWidth(size: 311.0), height: getRelativeHeight(size: 22.0), alignment: .center)
                            .padding(.top, getRelativeHeight(size: 16.0))
                            .padding(.horizontal, getRelativeWidth(size: 16.0))
                            HStack {
                                Text(StringConstants.kLblShipping)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo90087)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.leading)
                                    .frame(width: getRelativeWidth(size: 57.0), height: getRelativeHeight(size: 22.0), alignment: .topLeading)
                                    .opacity(0.5)
                                Spacer()
                                Text(StringConstants.kLblPosReggular)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo900)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.trailing)
                                    .frame(width: getRelativeWidth(size: 87.0), height: getRelativeHeight(size: 22.0), alignment: .topTrailing)
                                    .padding(.leading, getRelativeWidth(size: 167.0))
                            }
                            .frame(width: getRelativeWidth(size: 311.0), height: getRelativeHeight(size: 22.0), alignment: .center)
                            .padding(.top, getRelativeHeight(size: 12.0))
                            .padding(.horizontal, getRelativeWidth(size: 16.0))
                            HStack {
                                Text(StringConstants.kLblNoResi)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo90087)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.leading)
                                    .frame(width: getRelativeWidth(size: 50.0), height: getRelativeHeight(size: 22.0), alignment: .topLeading)
                                    .opacity(0.5)
                                Spacer()
                                Text(StringConstants.kLbl000192848573)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo900)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.trailing)
                                    .frame(width: getRelativeWidth(size: 91.0), height: getRelativeHeight(size: 22.0), alignment: .topTrailing)
                                    .padding(.leading, getRelativeWidth(size: 170.0))
                            }
                            .frame(width: getRelativeWidth(size: 311.0), height: getRelativeHeight(size: 22.0), alignment: .center)
                            .padding(.top, getRelativeHeight(size: 12.0))
                            .padding(.horizontal, getRelativeWidth(size: 16.0))
                            HStack {
                                Text(StringConstants.kLblAddress)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo90087)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.leading)
                                    .frame(width: getRelativeWidth(size: 52.0), height: getRelativeHeight(size: 22.0), alignment: .topLeading)
                                    .padding(.bottom, getRelativeHeight(size: 23.0))
                                    .padding(.leading, getRelativeWidth(size: 16.0))
                                    .opacity(0.5)
                                Spacer()
                                Text(StringConstants.kMsg2727NewOwerr)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo900)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.trailing)
                                    .frame(width: getRelativeWidth(size: 176.0), height: getRelativeHeight(size: 44.0), alignment: .topTrailing)
                                    .padding(.leading, getRelativeWidth(size: 83.0))
                                    .padding(.trailing, getRelativeWidth(size: 16.0))
                            }
                            .frame(width: getRelativeWidth(size: 343.0), height: getRelativeHeight(size: 45.0), alignment: .leading)
                            .padding(.vertical, getRelativeHeight(size: 12.0))
                        }
                        .frame(width: getRelativeWidth(size: 343.0), height: getRelativeHeight(size: 179.0), alignment: .center)
                        .overlay(RoundedCorners(topLeft: 5.0, topRight: 5.0, bottomLeft: 5.0, bottomRight: 5.0).stroke(ColorConstants.Blue50, lineWidth: 1))
                        .background(RoundedCorners(topLeft: 5.0, topRight: 5.0, bottomLeft: 5.0, bottomRight: 5.0).fill(ColorConstants.WhiteA700))
                        .padding(.top, getRelativeHeight(size: 12.0))
                        .padding(.horizontal, getRelativeWidth(size: 14.0))
                        Text(StringConstants.kLblPaymentDetails)
                            .font(FontScheme.kPoppinsBold(size: getRelativeHeight(size: 14.0)))
                            .foregroundColor(ColorConstants.Indigo900)
                            .minimumScaleFactor(0.5)
                            .multilineTextAlignment(.leading)
                            .frame(width: getRelativeWidth(size: 126.0), height: getRelativeHeight(size: 21.0), alignment: .topLeading)
                            .padding(.top, getRelativeHeight(size: 46.0))
                            .padding(.horizontal, getRelativeWidth(size: 16.0))
                        VStack {
                            HStack {
                                Text(StringConstants.kLblItems3)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Bluegray300)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.leading)
                                    .frame(width: getRelativeWidth(size: 59.0), height: getRelativeHeight(size: 22.0), alignment: .topLeading)
                                Spacer()
                                Text(StringConstants.kLbl59886)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo900)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.trailing)
                                    .frame(width: getRelativeWidth(size: 51.0), height: getRelativeHeight(size: 22.0), alignment: .topTrailing)
                                    .padding(.leading, getRelativeWidth(size: 200.0))
                            }
                            .frame(width: getRelativeWidth(size: 310.0), height: getRelativeHeight(size: 22.0), alignment: .center)
                            .padding(.top, getRelativeHeight(size: 16.0))
                            .padding(.horizontal, getRelativeWidth(size: 16.0))
                            HStack {
                                Text(StringConstants.kLblShipping)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Bluegray300)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.leading)
                                    .frame(width: getRelativeWidth(size: 57.0), height: getRelativeHeight(size: 22.0), alignment: .topLeading)
                                Spacer()
                                Text(StringConstants.kLbl4000)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo900)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.trailing)
                                    .frame(width: getRelativeWidth(size: 43.0), height: getRelativeHeight(size: 22.0), alignment: .topTrailing)
                                    .padding(.leading, getRelativeWidth(size: 210.0))
                            }
                            .frame(width: getRelativeWidth(size: 310.0), height: getRelativeHeight(size: 22.0), alignment: .center)
                            .padding(.top, getRelativeHeight(size: 12.0))
                            .padding(.horizontal, getRelativeWidth(size: 16.0))
                            HStack {
                                Text(StringConstants.kLblImportCharges)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Bluegray300)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.leading)
                                    .frame(width: getRelativeWidth(size: 100.0), height: getRelativeHeight(size: 22.0), alignment: .topLeading)
                                Spacer()
                                Text(StringConstants.kLbl12800)
                                    .font(FontScheme.kPoppinsRegular(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo900)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.trailing)
                                    .frame(width: getRelativeWidth(size: 47.0), height: getRelativeHeight(size: 22.0), alignment: .topTrailing)
                                    .padding(.leading, getRelativeWidth(size: 163.0))
                            }
                            .frame(width: getRelativeWidth(size: 310.0), height: getRelativeHeight(size: 22.0), alignment: .center)
                            .padding(.top, getRelativeHeight(size: 12.0))
                            .padding(.horizontal, getRelativeWidth(size: 16.0))
                            Divider()
                                .frame(width: getRelativeWidth(size: 311.0), height: getRelativeHeight(size: 1.0), alignment: .center)
                                .background(ColorConstants.Blue50)
                                .padding(.top, getRelativeHeight(size: 12.0))
                                .padding(.horizontal, getRelativeWidth(size: 16.0))
                            HStack {
                                Text(StringConstants.kLblTotalPrice)
                                    .font(FontScheme.kPoppinsBold(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.Indigo900)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.leading)
                                    .frame(width: getRelativeWidth(size: 70.0), height: getRelativeHeight(size: 18.0), alignment: .topLeading)
                                Spacer()
                                Text(StringConstants.kLbl76686)
                                    .font(FontScheme.kPoppinsBold(size: getRelativeHeight(size: 12.0)))
                                    .foregroundColor(ColorConstants.LightBlueA200)
                                    .minimumScaleFactor(0.5)
                                    .multilineTextAlignment(.trailing)
                                    .frame(width: getRelativeWidth(size: 52.0), height: getRelativeHeight(size: 18.0), alignment: .topTrailing)
                                    .padding(.leading, getRelativeWidth(size: 188.0))
                            }
                            .frame(width: getRelativeWidth(size: 310.0), height: getRelativeHeight(size: 18.0), alignment: .center)
                            .padding(.vertical, getRelativeHeight(size: 11.0))
                            .padding(.horizontal, getRelativeWidth(size: 16.0))
                        }
                        .frame(width: getRelativeWidth(size: 343.0), height: getRelativeHeight(size: 164.0), alignment: .center)
                        .overlay(RoundedCorners(topLeft: 5.0, topRight: 5.0, bottomLeft: 5.0, bottomRight: 5.0).stroke(ColorConstants.Blue50, lineWidth: 1))
                        .background(RoundedCorners(topLeft: 5.0, topRight: 5.0, bottomLeft: 5.0, bottomRight: 5.0).fill(ColorConstants.WhiteA700))
                        .padding(.top, getRelativeHeight(size: 12.0))
                        .padding(.horizontal, getRelativeWidth(size: 14.0))
                        Button(action: {}, label: {
                            Text(StringConstants.kLblNotifyMe)
                                .font(FontScheme.kPoppinsBold(size: getRelativeHeight(size: 14.0)))
                                .foregroundColor(ColorConstants.WhiteA700)
                                .frame(width: getRelativeWidth(size: 343.0), height: getRelativeHeight(size: 57.0), alignment: .center)
                        })
                        .frame(width: getRelativeWidth(size: 343.0), height: getRelativeHeight(size: 57.0), alignment: .center)
                        .background(RoundedCorners(topLeft: 5.0, topRight: 5.0, bottomLeft: 5.0, bottomRight: 5.0).fill(ColorConstants.LightBlueA200))
                        .shadow(color: ColorConstants.LightBlueA2003d, radius: 30, x: 0, y: 10)
                        .padding(.top, getRelativeHeight(size: 29.0))
                        .padding(.horizontal, getRelativeWidth(size: 14.0))
                    }
                    .frame(width: UIScreen.main.bounds.width, alignment: .topLeading)
                }
            }
            .frame(width: UIScreen.main.bounds.width, alignment: .topLeading)
            .background(ColorConstants.WhiteA700)
            .padding(.top, getRelativeHeight(size: 30.0))
            .padding(.bottom, getRelativeHeight(size: 10.0))
        }
        .frame(width: UIScreen.main.bounds.width, height: UIScreen.main.bounds.height)
        .background(ColorConstants.WhiteA700)
        .ignoresSafeArea()
        .hideNavigationBar()
    }
}

struct OrderDetailsView_Previews: PreviewProvider {
    static var previews: some View {
        OrderDetailsView()
    }
}
